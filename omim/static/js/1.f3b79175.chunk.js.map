{"version":3,"sources":["../static/js/1.f3b79175.chunk.js","docs/zh-cn/tree.md"],"names":["webpackJsonp","107","module","exports"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,QAAA","file":"static/js/1.f3b79175.chunk.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 107:\n/***/ (function(module, exports) {\n\nmodule.exports = \"## Tree\\r\\n\\r\\n许多东西都可以用树结构表示，如目录，组织层次结构，生物分类，等。树组件是表示这些事物之间层次关系的一种方式。还可以展开，折叠和选择树中的树节点。\\r\\n\\r\\n## 使用\\r\\n\\r\\n```html\\r\\n<m-tree id='myTree' checkbox node=\\\"{\\r\\n\\ttitle: 'p-0',\\r\\n\\tid: 1,\\r\\n\\ticon: 'account_balance_wallet',\\r\\n\\tchildren: [\\r\\n\\t\\t{\\r\\n\\t\\t\\ttitle: 'p-1',\\r\\n\\t\\t\\tid: 2,\\r\\n\\t\\t\\ticon: 'assignment_ind',\\r\\n\\t\\t\\tchildren: [\\r\\n\\t\\t\\t\\t{ title: 'p-2', id: 3, icon: 'chrome_reader_mode', checked: true },\\r\\n\\t\\t\\t\\t{ title: 'p-2.5', id: 13, icon: 'chrome_reader_mode' }\\r\\n\\t\\t\\t]\\r\\n\\t\\t},\\r\\n\\t\\t{\\r\\n\\t\\t\\ttitle: 'p-4',\\r\\n\\t\\t\\tid: 4,\\r\\n\\t\\t\\ticon: 'extension',\\r\\n\\r\\n\\t\\t\\tchildren: [\\r\\n\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\ttitle: 'p-5', id: 5, selected: true, icon: 'dashboard', checked: true,\\r\\n\\t\\t\\t\\t\\tdisabled: true\\r\\n\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\t{ title: '项目六', id: 6, icon: 'favorite' },\\r\\n\\t\\t\\t\\t{ title: '项目7', id: 7 }\\r\\n\\t\\t\\t]\\r\\n\\t\\t},\\r\\n\\t\\t{\\r\\n\\t\\t\\ttitle: 'p-11',\\r\\n\\t\\t\\tid: 14,\\r\\n\\t\\t\\ticon: 'group_work',\\r\\n\\t\\t\\tchildren: [\\r\\n\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\ttitle: 'p-12', id: 12, icon: 'fingerprint', checked: true\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t]\\r\\n\\t\\t}\\r\\n\\t]\\r\\n}\\\">\\r\\n</m-tree>\\r\\n```\\r\\n\\r\\n## Javascript\\r\\n\\r\\n```js\\r\\nvar myTree = document.querySelector('#myTree')\\r\\nvar nodeData = myTree.props.node\\r\\n\\r\\nmyTree.addEventListener('check', (evt) => {\\r\\n\\tconst node = getNodeById(evt.detail.id, nodeData)\\r\\n\\tif (!node.children) {\\r\\n\\t\\tnode.checked = evt.detail.checked\\r\\n\\t} else {\\r\\n\\t\\tcheckAll(node, evt.detail.state !== 'checked')\\r\\n\\t}\\r\\n\\tmyTree.setAttribute('node', nodeData)\\r\\n})\\r\\n\\r\\n\\r\\nmyTree.addEventListener('toggle', (evt) => {\\r\\n\\tconst node = getNodeById(evt.detail.id, nodeData)\\r\\n\\tnode.close = !node.close\\r\\n\\tmyTree.setAttribute('node', nodeData)\\r\\n})\\r\\n\\r\\nmyTree.addEventListener('nodeclick', (evt) => {\\r\\n\\tconst pre = getNodeById(evt.detail.pre, nodeData)\\r\\n\\tpre.selected = false\\r\\n\\tconst node = getNodeById(evt.detail.id, nodeData)\\r\\n\\tnode.selected = true\\r\\n\\tmyTree.setAttribute('node', nodeData)\\r\\n})\\r\\n\\r\\n\\r\\nfunction checkAll(node, checked) {\\r\\n\\tnode.children && node.children.forEach(child => {\\r\\n\\t\\tchild.checked = checked\\r\\n\\t\\tcheckAll(child, checked)\\r\\n\\t})\\r\\n}\\r\\n\\r\\nfunction getNodeById(id, node) {\\r\\n\\tif (node.id === id) return node\\r\\n\\tif (node.children) {\\r\\n\\t\\tfor (let i = 0, len = node.children.length; i < len; i++) {\\r\\n\\t\\t\\tlet child = node.children[i]\\r\\n\\t\\t\\tlet target = getNodeById(id, child)\\r\\n\\t\\t\\tif (target) {\\r\\n\\t\\t\\t\\treturn target\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n```\\r\\n\\r\\n## API\\r\\n\\r\\n### Props\\r\\n\\r\\n```jsx\\r\\n{\\r\\n\\tnode: obj,\\r\\n\\tcheckbox: boolean\\r\\n}\\r\\n```\\r\\n\\r\\n### Event\\r\\n\\r\\n```jsx\\r\\n{\\r\\n\\ttoggle: function, \\r\\n\\tnodeclick: function,\\r\\n\\tcheck: function\\r\\n}\\r\\n```\\r\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/1.f3b79175.chunk.js","module.exports = \"## Tree\\r\\n\\r\\n许多东西都可以用树结构表示，如目录，组织层次结构，生物分类，等。树组件是表示这些事物之间层次关系的一种方式。还可以展开，折叠和选择树中的树节点。\\r\\n\\r\\n## 使用\\r\\n\\r\\n```html\\r\\n<m-tree id='myTree' checkbox node=\\\"{\\r\\n\\ttitle: 'p-0',\\r\\n\\tid: 1,\\r\\n\\ticon: 'account_balance_wallet',\\r\\n\\tchildren: [\\r\\n\\t\\t{\\r\\n\\t\\t\\ttitle: 'p-1',\\r\\n\\t\\t\\tid: 2,\\r\\n\\t\\t\\ticon: 'assignment_ind',\\r\\n\\t\\t\\tchildren: [\\r\\n\\t\\t\\t\\t{ title: 'p-2', id: 3, icon: 'chrome_reader_mode', checked: true },\\r\\n\\t\\t\\t\\t{ title: 'p-2.5', id: 13, icon: 'chrome_reader_mode' }\\r\\n\\t\\t\\t]\\r\\n\\t\\t},\\r\\n\\t\\t{\\r\\n\\t\\t\\ttitle: 'p-4',\\r\\n\\t\\t\\tid: 4,\\r\\n\\t\\t\\ticon: 'extension',\\r\\n\\r\\n\\t\\t\\tchildren: [\\r\\n\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\ttitle: 'p-5', id: 5, selected: true, icon: 'dashboard', checked: true,\\r\\n\\t\\t\\t\\t\\tdisabled: true\\r\\n\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\t{ title: '项目六', id: 6, icon: 'favorite' },\\r\\n\\t\\t\\t\\t{ title: '项目7', id: 7 }\\r\\n\\t\\t\\t]\\r\\n\\t\\t},\\r\\n\\t\\t{\\r\\n\\t\\t\\ttitle: 'p-11',\\r\\n\\t\\t\\tid: 14,\\r\\n\\t\\t\\ticon: 'group_work',\\r\\n\\t\\t\\tchildren: [\\r\\n\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\ttitle: 'p-12', id: 12, icon: 'fingerprint', checked: true\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t]\\r\\n\\t\\t}\\r\\n\\t]\\r\\n}\\\">\\r\\n</m-tree>\\r\\n```\\r\\n\\r\\n## Javascript\\r\\n\\r\\n```js\\r\\nvar myTree = document.querySelector('#myTree')\\r\\nvar nodeData = myTree.props.node\\r\\n\\r\\nmyTree.addEventListener('check', (evt) => {\\r\\n\\tconst node = getNodeById(evt.detail.id, nodeData)\\r\\n\\tif (!node.children) {\\r\\n\\t\\tnode.checked = evt.detail.checked\\r\\n\\t} else {\\r\\n\\t\\tcheckAll(node, evt.detail.state !== 'checked')\\r\\n\\t}\\r\\n\\tmyTree.setAttribute('node', nodeData)\\r\\n})\\r\\n\\r\\n\\r\\nmyTree.addEventListener('toggle', (evt) => {\\r\\n\\tconst node = getNodeById(evt.detail.id, nodeData)\\r\\n\\tnode.close = !node.close\\r\\n\\tmyTree.setAttribute('node', nodeData)\\r\\n})\\r\\n\\r\\nmyTree.addEventListener('nodeclick', (evt) => {\\r\\n\\tconst pre = getNodeById(evt.detail.pre, nodeData)\\r\\n\\tpre.selected = false\\r\\n\\tconst node = getNodeById(evt.detail.id, nodeData)\\r\\n\\tnode.selected = true\\r\\n\\tmyTree.setAttribute('node', nodeData)\\r\\n})\\r\\n\\r\\n\\r\\nfunction checkAll(node, checked) {\\r\\n\\tnode.children && node.children.forEach(child => {\\r\\n\\t\\tchild.checked = checked\\r\\n\\t\\tcheckAll(child, checked)\\r\\n\\t})\\r\\n}\\r\\n\\r\\nfunction getNodeById(id, node) {\\r\\n\\tif (node.id === id) return node\\r\\n\\tif (node.children) {\\r\\n\\t\\tfor (let i = 0, len = node.children.length; i < len; i++) {\\r\\n\\t\\t\\tlet child = node.children[i]\\r\\n\\t\\t\\tlet target = getNodeById(id, child)\\r\\n\\t\\t\\tif (target) {\\r\\n\\t\\t\\t\\treturn target\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n```\\r\\n\\r\\n## API\\r\\n\\r\\n### Props\\r\\n\\r\\n```jsx\\r\\n{\\r\\n\\tnode: obj,\\r\\n\\tcheckbox: boolean\\r\\n}\\r\\n```\\r\\n\\r\\n### Event\\r\\n\\r\\n```jsx\\r\\n{\\r\\n\\ttoggle: function, \\r\\n\\tnodeclick: function,\\r\\n\\tcheck: function\\r\\n}\\r\\n```\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/docs/zh-cn/tree.md\n// module id = 107\n// module chunks = 1"],"sourceRoot":""}