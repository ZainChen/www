webpackJsonp([1],{107:function(t,n){t.exports="## Tree\r\n\r\n\u8bb8\u591a\u4e1c\u897f\u90fd\u53ef\u4ee5\u7528\u6811\u7ed3\u6784\u8868\u793a\uff0c\u5982\u76ee\u5f55\uff0c\u7ec4\u7ec7\u5c42\u6b21\u7ed3\u6784\uff0c\u751f\u7269\u5206\u7c7b\uff0c\u7b49\u3002\u6811\u7ec4\u4ef6\u662f\u8868\u793a\u8fd9\u4e9b\u4e8b\u7269\u4e4b\u95f4\u5c42\u6b21\u5173\u7cfb\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u8fd8\u53ef\u4ee5\u5c55\u5f00\uff0c\u6298\u53e0\u548c\u9009\u62e9\u6811\u4e2d\u7684\u6811\u8282\u70b9\u3002\r\n\r\n## \u4f7f\u7528\r\n\r\n```html\r\n<m-tree id='myTree' checkbox node=\"{\r\n\ttitle: 'p-0',\r\n\tid: 1,\r\n\ticon: 'account_balance_wallet',\r\n\tchildren: [\r\n\t\t{\r\n\t\t\ttitle: 'p-1',\r\n\t\t\tid: 2,\r\n\t\t\ticon: 'assignment_ind',\r\n\t\t\tchildren: [\r\n\t\t\t\t{ title: 'p-2', id: 3, icon: 'chrome_reader_mode', checked: true },\r\n\t\t\t\t{ title: 'p-2.5', id: 13, icon: 'chrome_reader_mode' }\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'p-4',\r\n\t\t\tid: 4,\r\n\t\t\ticon: 'extension',\r\n\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'p-5', id: 5, selected: true, icon: 'dashboard', checked: true,\r\n\t\t\t\t\tdisabled: true\r\n\t\t\t\t},\r\n\t\t\t\t{ title: '\u9879\u76ee\u516d', id: 6, icon: 'favorite' },\r\n\t\t\t\t{ title: '\u9879\u76ee7', id: 7 }\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'p-11',\r\n\t\t\tid: 14,\r\n\t\t\ticon: 'group_work',\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: 'p-12', id: 12, icon: 'fingerprint', checked: true\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}\">\r\n</m-tree>\r\n```\r\n\r\n## Javascript\r\n\r\n```js\r\nvar myTree = document.querySelector('#myTree')\r\nvar nodeData = myTree.props.node\r\n\r\nmyTree.addEventListener('check', (evt) => {\r\n\tconst node = getNodeById(evt.detail.id, nodeData)\r\n\tif (!node.children) {\r\n\t\tnode.checked = evt.detail.checked\r\n\t} else {\r\n\t\tcheckAll(node, evt.detail.state !== 'checked')\r\n\t}\r\n\tmyTree.setAttribute('node', nodeData)\r\n})\r\n\r\n\r\nmyTree.addEventListener('toggle', (evt) => {\r\n\tconst node = getNodeById(evt.detail.id, nodeData)\r\n\tnode.close = !node.close\r\n\tmyTree.setAttribute('node', nodeData)\r\n})\r\n\r\nmyTree.addEventListener('nodeclick', (evt) => {\r\n\tconst pre = getNodeById(evt.detail.pre, nodeData)\r\n\tpre.selected = false\r\n\tconst node = getNodeById(evt.detail.id, nodeData)\r\n\tnode.selected = true\r\n\tmyTree.setAttribute('node', nodeData)\r\n})\r\n\r\n\r\nfunction checkAll(node, checked) {\r\n\tnode.children && node.children.forEach(child => {\r\n\t\tchild.checked = checked\r\n\t\tcheckAll(child, checked)\r\n\t})\r\n}\r\n\r\nfunction getNodeById(id, node) {\r\n\tif (node.id === id) return node\r\n\tif (node.children) {\r\n\t\tfor (let i = 0, len = node.children.length; i < len; i++) {\r\n\t\t\tlet child = node.children[i]\r\n\t\t\tlet target = getNodeById(id, child)\r\n\t\t\tif (target) {\r\n\t\t\t\treturn target\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\n## API\r\n\r\n### Props\r\n\r\n```jsx\r\n{\r\n\tnode: obj,\r\n\tcheckbox: boolean\r\n}\r\n```\r\n\r\n### Event\r\n\r\n```jsx\r\n{\r\n\ttoggle: function, \r\n\tnodeclick: function,\r\n\tcheck: function\r\n}\r\n```\r\n"}});
//# sourceMappingURL=1.f3b79175.chunk.js.map