{"version":3,"sources":["../static/js/12.32125491.chunk.js","docs/zh-cn/introduction.md"],"names":["webpackJsonp","74","module","exports"],"mappings":"AAAAA,cAAc,KAERC,GACA,SAAUC,EAAQC,GCHxBD,EAAAC,QAAA","file":"static/js/12.32125491.chunk.js","sourcesContent":["webpackJsonp([12],{\n\n/***/ 74:\n/***/ (function(module, exports) {\n\nmodule.exports = \"# Omim\\r\\n\\r\\n[Omi](https://github.com/Tencent/omi) 打造的 Material Design 框架无关标准组件，任意框架都可以使用。\\r\\n\\r\\n## 特性\\r\\n\\r\\n* 基于 [material-components-web](https://github.com/material-components/material-components-web) 简单包装\\r\\n* 使用标准 Web Components 的 Custom Elements 渲染 \\r\\n* 任意框架都可以使用这些组件(比如 Omi, React, Vue and Angular)\\r\\n* 同时支持 JSX 和 原生 HTML 标签的使用方式 \\r\\n* 每个组件可以单独使用\\r\\n\\r\\n## 使用指南\\r\\n\\r\\n### 通过 script\\r\\n\\r\\n```html\\r\\n<script src=\\\"https://unpkg.com/omi\\\"></script>\\r\\n<script src=\\\"https://unpkg.com/@omim/core@0.0.1/button/index.js\\\"></script>\\r\\n\\r\\n<m-button>I am button</m-button>\\r\\n```\\r\\n\\r\\n### 通过 npm\\r\\n\\r\\n``` bash\\r\\nnpm install @omim/core\\r\\n```\\r\\n\\r\\nThen:\\r\\n\\r\\n```js\\r\\nimport '@omim/core/button'\\r\\n```\\r\\n\\r\\n然后在任意框架中使用，比如 Omi, React, Vue or Angular:\\r\\n\\r\\n``` html\\r\\n<m-button>I am button</m-button>\\r\\n```\\r\\n\\r\\nIt can also be used in pure js:\\r\\n\\r\\n```js\\r\\nvar button = document.createElement('m-button')\\r\\nbutton.innerHTML = 'I am button'\\r\\ndocument.body.append(button)\\r\\nbutton.addEventListener('click', function () {\\r\\n  console.log('Clicked!')\\r\\n})\\r\\n\\r\\n//or\\r\\n//document.body.innerHTML = '<m-button>I am button</m-button>'\\r\\n```\\r\\n\\r\\n\\r\\n## 贡献\\r\\n\\r\\n### CMD\\r\\n\\r\\nBuild component:\\r\\n\\r\\n```bash\\r\\nnpm run build -- component-name\\r\\n```\\r\\n\\r\\nBuild demo:\\r\\n\\r\\n```bash\\r\\nnpm start demo-name\\r\\n```\\r\\n\\r\\nPublish:\\r\\n\\r\\n```bash\\r\\nnpm publish --access public\\r\\n```\\r\\n\\r\\n## 相关链接\\r\\n\\r\\n* [material.io docs](https://material.io/develop/web/components/buttons/) \\r\\n* [material.io demo](https://material-components.github.io/material-components-web-catalog/#/) \\r\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/12.32125491.chunk.js","module.exports = \"# Omim\\r\\n\\r\\n[Omi](https://github.com/Tencent/omi) 打造的 Material Design 框架无关标准组件，任意框架都可以使用。\\r\\n\\r\\n## 特性\\r\\n\\r\\n* 基于 [material-components-web](https://github.com/material-components/material-components-web) 简单包装\\r\\n* 使用标准 Web Components 的 Custom Elements 渲染 \\r\\n* 任意框架都可以使用这些组件(比如 Omi, React, Vue and Angular)\\r\\n* 同时支持 JSX 和 原生 HTML 标签的使用方式 \\r\\n* 每个组件可以单独使用\\r\\n\\r\\n## 使用指南\\r\\n\\r\\n### 通过 script\\r\\n\\r\\n```html\\r\\n<script src=\\\"https://unpkg.com/omi\\\"></script>\\r\\n<script src=\\\"https://unpkg.com/@omim/core@0.0.1/button/index.js\\\"></script>\\r\\n\\r\\n<m-button>I am button</m-button>\\r\\n```\\r\\n\\r\\n### 通过 npm\\r\\n\\r\\n``` bash\\r\\nnpm install @omim/core\\r\\n```\\r\\n\\r\\nThen:\\r\\n\\r\\n```js\\r\\nimport '@omim/core/button'\\r\\n```\\r\\n\\r\\n然后在任意框架中使用，比如 Omi, React, Vue or Angular:\\r\\n\\r\\n``` html\\r\\n<m-button>I am button</m-button>\\r\\n```\\r\\n\\r\\nIt can also be used in pure js:\\r\\n\\r\\n```js\\r\\nvar button = document.createElement('m-button')\\r\\nbutton.innerHTML = 'I am button'\\r\\ndocument.body.append(button)\\r\\nbutton.addEventListener('click', function () {\\r\\n  console.log('Clicked!')\\r\\n})\\r\\n\\r\\n//or\\r\\n//document.body.innerHTML = '<m-button>I am button</m-button>'\\r\\n```\\r\\n\\r\\n\\r\\n## 贡献\\r\\n\\r\\n### CMD\\r\\n\\r\\nBuild component:\\r\\n\\r\\n```bash\\r\\nnpm run build -- component-name\\r\\n```\\r\\n\\r\\nBuild demo:\\r\\n\\r\\n```bash\\r\\nnpm start demo-name\\r\\n```\\r\\n\\r\\nPublish:\\r\\n\\r\\n```bash\\r\\nnpm publish --access public\\r\\n```\\r\\n\\r\\n## 相关链接\\r\\n\\r\\n* [material.io docs](https://material.io/develop/web/components/buttons/) \\r\\n* [material.io demo](https://material-components.github.io/material-components-web-catalog/#/) \\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/docs/zh-cn/introduction.md\n// module id = 74\n// module chunks = 12"],"sourceRoot":""}